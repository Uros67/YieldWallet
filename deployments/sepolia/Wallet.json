{
  "address": "0x32D683fC704A8A3fab30e9d62d22Ec27C7402D4B",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "save",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receipent",
          "type": "address"
        }
      ],
      "name": "spend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x45494945f872128a541b7f1c2864689d389f8e70f86933ebcecd978ba6749d43",
  "receipt": {
    "to": null,
    "from": "0xB5274Bf972b9db18892d0b69433d474DDe6eE022",
    "contractAddress": "0x32D683fC704A8A3fab30e9d62d22Ec27C7402D4B",
    "transactionIndex": 27,
    "gasUsed": "797021",
    "logsBloom": "0x
    "blockHash": "0xceb43df421604914d986afb61643dbb801f7368e520d9b44e6f3d2c95c95c183",
    "transactionHash": "0x45494945f872128a541b7f1c2864689d389f8e70f86933ebcecd978ba6749d43",
    "logs": [],
    "blockNumber": 5167673,
    "cumulativeGasUsed": "6629401",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8c02854a3724302c932dc779354fc869",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"save\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receipent\",\"type\":\"address\"}],\"name\":\"spend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Wallet.sol\":\"Wallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/IYDAI.sol\\\";\\nimport \\\"./interfaces/IYUSDC.sol\\\";\\nimport \\\"./interfaces/IYUSDT.sol\\\";\\n\\n\\ncontract Wallet {\\n    address admin;\\n\\n    IERC20 dai= IERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F);\\n    IYDAI yDai= IYDAI(0xC2cB1040220768554cf699b0d863A3cd4324ce32);\\n\\n    IERC20 usdc= IERC20(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48);\\n    IYUSDC yUsdc= IYUSDC(0x26EA744E5B887E5205727f55dFBE8685e3b21951);\\n\\n    IERC20 usdt= IERC20(0xdAC17F958D2ee523a2206206994597C13D831ec7);\\n    IYUSDT yUsdt= IYUSDT(0xE6354ed5bC4b393a5Aad09f21c46E101e692d447);\\n\\n\\n    constructor() {\\n        admin= msg.sender;\\n        \\n    }\\n    function save(uint256 amount)external {\\n        dai.transferFrom(msg.sender, address(this), amount);\\n        _save(amount);\\n    }\\n    function spend(uint256 amount, address receipent) external {\\n        require(msg.sender== admin, \\\"Only admin!\\\");\\n        uint256 balanceShares= yDai.balanceOf(address(this));\\n        yDai.withdraw(balanceShares);\\n        dai.transfer(receipent, amount);\\n        uint256 balanceDai=dai.balanceOf(address(this));\\n        if(balanceDai > 0){\\n            _save(balanceDai);\\n        }\\n\\n    }\\n    function _save(uint256 amount) internal {\\n        dai.approve(address(yDai), amount);\\n        yDai.deposit(amount);\\n    }\\n    function balance() external view returns(uint256){\\n        uint256 price= yDai.getPricePerFullShare();\\n        uint256 balanceShares= yDai.balanceOf(address(this));\\n        return (price * balanceShares);\\n\\n    }\\n//     // SPDX-License-Identifier: MIT\\n// pragma solidity ^0.8.0;\\n\\n// import \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n// import \\\"./interfaces/IYtoken.sol\\\";\\n\\n\\n\\n// contract Wallet {\\n//     address admin;\\n\\n//     IERC20 dai= IERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F);\\n//     IYtoken yDai= IYtoken(0xC2cB1040220768554cf699b0d863A3cd4324ce32);\\n\\n//     IERC20 usdc= IERC20(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48);\\n//     IYtoken yUsdc= IYtoken(0x26EA744E5B887E5205727f55dFBE8685e3b21951);\\n\\n//     IERC20 usdt= IERC20(0xdAC17F958D2ee523a2206206994597C13D831ec7);\\n//     IYtoken yUsdt= IYtoken(0xE6354ed5bC4b393a5Aad09f21c46E101e692d447);\\n\\n//     IERC20 token;\\n//     IYtoken yToken;\\n\\n\\n//     constructor() {\\n//         admin= msg.sender;\\n//         token= dai;\\n//         yToken= yDai;\\n        \\n//     }\\n//     function save(uint256 amount) external {\\n//         token.transferFrom(msg.sender, address(this), amount);\\n//         _save(amount);\\n//     }\\n//     function spend(uint256 amount, address receipent) external {\\n//         require(msg.sender== admin, \\\"Only admin!\\\");\\n//         uint256 balanceShares= yToken.balanceOf(address(this));\\n//         yToken.withdraw(balanceShares);\\n//         token.transfer(receipent, amount);\\n//         uint256 balanceToken=token.balanceOf(address(this));\\n//         if(balanceToken > 0){\\n//             _save(balanceToken);\\n//         }\\n\\n//     }\\n//     function _save(uint256 amount) internal {\\n//         token.approve(address(yDai), amount);\\n//         yToken.deposit(amount);\\n//     }\\n//     function balance() external view returns(uint256){\\n//         uint256 price= yToken.getPricePerFullShare();\\n//         uint256 balanceShares= yToken.balanceOf(address(this));\\n//         return (price * balanceShares);\\n\\n//     }\\n//     function changeToken(string calldata tokenName) external{\\n//         if(keccak256(abi.encodePacked((tokenName))) == keccak256(abi.encodePacked((\\\"dai\\\")))){\\n//             token= dai;\\n//             yToken= yDai;\\n\\n//         }\\n//         if(keccak256(abi.encodePacked((tokenName))) == keccak256(abi.encodePacked((\\\"usdc\\\")))){\\n//             token= usdc;\\n//             yToken= yUsdc;\\n\\n//         }\\n//         if(keccak256(abi.encodePacked((tokenName))) == keccak256(abi.encodePacked((\\\"usdt\\\")))){\\n//             token= usdt;\\n//             yToken= yUsdt;\\n\\n//         }\\n//     }\\n// }\\n}\",\"keccak256\":\"0x39261fc9ef03c03f31011ef0bdeb1075cf4649ce2c1d4a0fba14d8ebc83779a7\",\"license\":\"MIT\"},\"contracts/interfaces/IYDAI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IYDAI {\\n    function deposit(uint _amount) external;\\n    function withdraw(uint _shares) external;\\n    function balanceOf(address account) external view returns (uint);\\n    function getPricePerFullShare() external view returns (uint);\\n}\",\"keccak256\":\"0xe3744dbd3936f19c8c125347e01cc40e3dad3242fdd77f142aea90c87bfd3c77\",\"license\":\"MIT\"},\"contracts/interfaces/IYUSDC.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IYUSDC {\\n    function deposit(uint _amount) external;\\n    function withdraw(uint _shares) external;\\n    function balanceOf(address account) external view returns (uint);\\n    function getPricePerFullShare() external view returns (uint);\\n}\",\"keccak256\":\"0x19b70012035c371f2e9a1043802ba60d702690694e6e56305558357fb21f87fa\",\"license\":\"MIT\"},\"contracts/interfaces/IYUSDT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IYUSDT {\\n    function deposit(uint _amount) external;\\n    function withdraw(uint _shares) external;\\n    function balanceOf(address account) external view returns (uint);\\n    function getPricePerFullShare() external view returns (uint);\\n}\",\"keccak256\":\"0x83ad5139e587a00e56da1ce95bf60de6a5e0a7a04b8f850605b9030bd354c6b7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052736b175474e89094c44da98b954eedeac495271d0f600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073c2cb1040220768554cf699b0d863a3cd4324ce32600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507326ea744e5b887e5205727f55dfbe8685e3b21951600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073dac17f958d2ee523a2206206994597c13d831ec7600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073e6354ed5bc4b393a5aad09f21c46e101e692d447600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561020e57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a818061025e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631b862027146100465780631e9f59db14610062578063b69ef8a81461007e575b600080fd5b610060600480360381019061005b9190610737565b61009c565b005b61007c600480360381019061007791906107c2565b61014b565b005b610086610460565b6040516100939190610811565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016100fb9392919061083b565b6020604051808303816000875af115801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e91906108aa565b50610148816105a9565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d090610934565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102369190610954565b602060405180830381865afa158015610253573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102779190610984565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016102d49190610811565b600060405180830381600087803b1580156102ee57600080fd5b505af1158015610302573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83856040518363ffffffff1660e01b81526004016103639291906109b1565b6020604051808303816000875af1158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a691906108aa565b506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104049190610954565b602060405180830381865afa158015610421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104459190610984565b9050600081111561045a57610459816105a9565b5b50505050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166377c7b8fc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f49190610984565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105539190610954565b602060405180830381865afa158015610570573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105949190610984565b905080826105a29190610a09565b9250505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016106289291906109b1565b6020604051808303816000875af1158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b91906108aa565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6b55f25826040518263ffffffff1660e01b81526004016106c79190610811565b600060405180830381600087803b1580156106e157600080fd5b505af11580156106f5573d6000803e3d6000fd5b5050505050565b600080fd5b6000819050919050565b61071481610701565b811461071f57600080fd5b50565b6000813590506107318161070b565b92915050565b60006020828403121561074d5761074c6106fc565b5b600061075b84828501610722565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078f82610764565b9050919050565b61079f81610784565b81146107aa57600080fd5b50565b6000813590506107bc81610796565b92915050565b600080604083850312156107d9576107d86106fc565b5b60006107e785828601610722565b92505060206107f8858286016107ad565b9150509250929050565b61080b81610701565b82525050565b60006020820190506108266000830184610802565b92915050565b61083581610784565b82525050565b6000606082019050610850600083018661082c565b61085d602083018561082c565b61086a6040830184610802565b949350505050565b60008115159050919050565b61088781610872565b811461089257600080fd5b50565b6000815190506108a48161087e565b92915050565b6000602082840312156108c0576108bf6106fc565b5b60006108ce84828501610895565b91505092915050565b600082825260208201905092915050565b7f4f6e6c792061646d696e21000000000000000000000000000000000000000000600082015250565b600061091e600b836108d7565b9150610929826108e8565b602082019050919050565b6000602082019050818103600083015261094d81610911565b9050919050565b6000602082019050610969600083018461082c565b92915050565b60008151905061097e8161070b565b92915050565b60006020828403121561099a576109996106fc565b5b60006109a88482850161096f565b91505092915050565b60006040820190506109c6600083018561082c565b6109d36020830184610802565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a1482610701565b9150610a1f83610701565b9250828202610a2d81610701565b91508282048414831517610a4457610a436109da565b5b509291505056fea2646970667358221220666101b850805551d51dde148c5aa87831d00e598743ed36d59c4a3ac04a0ae764736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80631b862027146100465780631e9f59db14610062578063b69ef8a81461007e575b600080fd5b610060600480360381019061005b9190610737565b61009c565b005b61007c600480360381019061007791906107c2565b61014b565b005b610086610460565b6040516100939190610811565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016100fb9392919061083b565b6020604051808303816000875af115801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e91906108aa565b50610148816105a9565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d090610934565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102369190610954565b602060405180830381865afa158015610253573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102779190610984565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016102d49190610811565b600060405180830381600087803b1580156102ee57600080fd5b505af1158015610302573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83856040518363ffffffff1660e01b81526004016103639291906109b1565b6020604051808303816000875af1158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a691906108aa565b506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104049190610954565b602060405180830381865afa158015610421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104459190610984565b9050600081111561045a57610459816105a9565b5b50505050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166377c7b8fc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f49190610984565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105539190610954565b602060405180830381865afa158015610570573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105949190610984565b905080826105a29190610a09565b9250505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016106289291906109b1565b6020604051808303816000875af1158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b91906108aa565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6b55f25826040518263ffffffff1660e01b81526004016106c79190610811565b600060405180830381600087803b1580156106e157600080fd5b505af11580156106f5573d6000803e3d6000fd5b5050505050565b600080fd5b6000819050919050565b61071481610701565b811461071f57600080fd5b50565b6000813590506107318161070b565b92915050565b60006020828403121561074d5761074c6106fc565b5b600061075b84828501610722565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078f82610764565b9050919050565b61079f81610784565b81146107aa57600080fd5b50565b6000813590506107bc81610796565b92915050565b600080604083850312156107d9576107d86106fc565b5b60006107e785828601610722565b92505060206107f8858286016107ad565b9150509250929050565b61080b81610701565b82525050565b60006020820190506108266000830184610802565b92915050565b61083581610784565b82525050565b6000606082019050610850600083018661082c565b61085d602083018561082c565b61086a6040830184610802565b949350505050565b60008115159050919050565b61088781610872565b811461089257600080fd5b50565b6000815190506108a48161087e565b92915050565b6000602082840312156108c0576108bf6106fc565b5b60006108ce84828501610895565b91505092915050565b600082825260208201905092915050565b7f4f6e6c792061646d696e21000000000000000000000000000000000000000000600082015250565b600061091e600b836108d7565b9150610929826108e8565b602082019050919050565b6000602082019050818103600083015261094d81610911565b9050919050565b6000602082019050610969600083018461082c565b92915050565b60008151905061097e8161070b565b92915050565b60006020828403121561099a576109996106fc565b5b60006109a88482850161096f565b91505092915050565b60006040820190506109c6600083018561082c565b6109d36020830184610802565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a1482610701565b9150610a1f83610701565b9250828202610a2d81610701565b91508282048414831517610a4457610a436109da565b5b509291505056fea2646970667358221220666101b850805551d51dde148c5aa87831d00e598743ed36d59c4a3ac04a0ae764736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 85,
        "contract": "contracts/Wallet.sol:Wallet",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 91,
        "contract": "contracts/Wallet.sol:Wallet",
        "label": "dai",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 97,
        "contract": "contracts/Wallet.sol:Wallet",
        "label": "yDai",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IYDAI)285"
      },
      {
        "astId": 103,
        "contract": "contracts/Wallet.sol:Wallet",
        "label": "usdc",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 109,
        "contract": "contracts/Wallet.sol:Wallet",
        "label": "yUsdc",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IYUSDC)310"
      },
      {
        "astId": 115,
        "contract": "contracts/Wallet.sol:Wallet",
        "label": "usdt",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 121,
        "contract": "contracts/Wallet.sol:Wallet",
        "label": "yUsdt",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(IYUSDT)335"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IYDAI)285": {
        "encoding": "inplace",
        "label": "contract IYDAI",
        "numberOfBytes": "20"
      },
      "t_contract(IYUSDC)310": {
        "encoding": "inplace",
        "label": "contract IYUSDC",
        "numberOfBytes": "20"
      },
      "t_contract(IYUSDT)335": {
        "encoding": "inplace",
        "label": "contract IYUSDT",
        "numberOfBytes": "20"
      }
    }
  }
}